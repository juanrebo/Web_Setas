package com.setas.modelo;
// Generated 02-ago-2018 19:14:14 by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Coleccion generated by hbm2java
 */
@Entity
@Table(name = "coleccion", catalog = "setasdb")
public class Coleccion implements java.io.Serializable {

	private ColeccionId id;
	private Seta seta;
	private Usuario usuario;
	private Set<Localizacion> localizacions = new HashSet<Localizacion>(0);

	public Coleccion() {
	}

	public Coleccion(ColeccionId id, Seta seta, Usuario usuario) {
		this.id = id;
		this.seta = seta;
		this.usuario = usuario;
	}

	public Coleccion(ColeccionId id, Seta seta, Usuario usuario, Set<Localizacion> localizacions) {
		this.id = id;
		this.seta = seta;
		this.usuario = usuario;
		this.localizacions = localizacions;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "idseta", column = @Column(name = "idseta", nullable = false)),
			@AttributeOverride(name = "idusuario", column = @Column(name = "idusuario", nullable = false)) })
	public ColeccionId getId() {
		return this.id;
	}

	public void setId(ColeccionId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idseta", nullable = false, insertable = false, updatable = false)
	public Seta getSeta() {
		return this.seta;
	}

	public void setSeta(Seta seta) {
		this.seta = seta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coleccion")
	public Set<Localizacion> getLocalizacions() {
		return this.localizacions;
	}

	public void setLocalizacions(Set<Localizacion> localizacions) {
		this.localizacions = localizacions;
	}

}
